* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body,
html {
    height: 100%;
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
}

body {
    margin: 0;
    background-color: #060720;
}

:root {
    --t: 32s;
    --q: 3;     /* Given */
    --w1: 40px; /* Outer long side W */
    --n: calc(var(--w1) / 8.7); /* Original radius */
    --s: calc(var(--w1) / 4);   /* Spacing between shapes */
   
    --w2: calc(var(--w1) - (2 * var(--n)));
    --h2: calc(var(--w2) / var(--q));
    --h1: calc(var(--h2) + (2 * var(--n)));
    --r1: calc(2 * var(--n));
    --r2: calc(var(--n));
}

.container {
    display: flex;
    flex-direction: column;
    /* Stack full-rows vertically */
    justify-content: center;
    /* Vertically center rows */
    width: 100%;
    height: 100%;
}

.full-row {
    display: flex;
    /* Align unitary-blocks horizontally */
    flex-direction: row;
    width: 100%;
    /* Full width of the container */
    justify-content: center;
    /* Horizontally center */
    overflow: hidden;
}

.unitary-block {
    display: flex;
    flex-direction: column;
    /* Stack patterns vertically */
    flex: 1;
    /* Allow blocks to grow equally */
    overflow: hidden;
}

/* Each pattern holds 4 X-shapes in a horizontal row */
.pattern {
    display: flex; /* Align x-shapes horizontally */
    justify-content: space-around; /* Center x-shapes within the pattern */
}

/* X-shape settings */
.x-shape {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: transparent;
    position: relative;
    width: var(--w1); /* Add spacing to width */
    height: var(--w1); /* Add spacing to height */
    will-change: transform, opacity; /* Hints the browser to optimize these properties */

}

/* Rectangle Styles */
.outer,
.inner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform-origin: center;
    transform: translate(-50%, -50%) rotate(45deg); /* Center and rotate */
}

.outer {
    width: var(--w1);
    height: var(--h1);
    border-radius: var(--r1);
}

.inner {
    width: var(--w2);
    height: var(--h2);
    border-radius: var(--r2);
}

.r2 {
    transform: translate(-50%, -50%) rotate(-45deg); /* Adjusted rotation for r2 */
}

/* Colors for X shapes */
.c1 .outer   {background-color: #FF00BF;}
.c1 .inner   {background-color: #8C0069;}
.c2 .outer   {background-color: #FFBF00;}
.c2 .inner   {background-color: #8C6900;}
.c3 .outer   {background-color: #00FF40;}
.c3 .inner   {background-color: #008C23;}
.c4 .outer   {background-color: #0040FF;}
.c4 .inner   {background-color: #00238C;}

/* Apply the same keyframes as before */
@keyframes colorCycleOuter {
    0%     {background-color: #FF00BF;} /* Pink */
    12.5%  {background-color: #FF0000;} 
    25%    {background-color: #FFBF00;} /* Yellow */
    37.5%  {background-color: #80FF00;} 
    50%    {background-color: #00FF40;} /* Green */
    62.5%  {background-color: #00FFFF;} 
    75%    {background-color: #0040FF;} /* Blue */
    87.5%  {background-color: #8000FF;} 
    100%   {background-color: #FF00BF;} /* Back to Pink */
}

@keyframes colorCycleInner {
    0%     {background-color: #8C0069;} // OG 
    12.5%  {background-color: #B80015;} 
    25%    {background-color: #8C6900;} 
    37.5%  {background-color: #5BB814;} 
    50%    {background-color: #008C23;} 
    62.5%  {background-color: #00B8CC;} 
    75%    {background-color: #00238C;} 
    87.5%  {background-color: #5C00CC;} 
    100%   {background-color: #8C0069;} 
}  


 /* 
@keyframes colorCycleInner {
    0%     {background-color: #008C23;} // shifted, green is first 
    12.5%  {background-color: #00B8CC;} 
    25%    {background-color: #00238C;} 
    37.5%  {background-color: #5C00CC;} 
    50%    {background-color: #8C0069;} 
    62.5%  {background-color: #B80015;} 
    75%    {background-color: #8C6900;} 
    87.5%  {background-color: #5BB814;} 
    100%   {background-color: #008C23;} 
} */


/* Outer and inner animation settings for all shapes */
.x-shape .outer,
.x-shape .inner {
    animation-duration: var(--t);
    animation-timing-function: linear;
    animation-iteration-count: infinite;
}

/* Pink shapes */
.c1 .outer, .c2 .outer, .c3 .outer, .c4 .outer, .c5 .outer, .c6 .outer, .c7 .outer, .c8 .outer, .c9 .outer, .c10 .outer, .c11 .outer, .c12 .outer, .c13 .outer, .c14 .outer, .c15 .outer, .c16 .outer {
    animation-name: colorCycleOuter;
}

.c1 .inner, .c2 .inner, .c3 .inner, .c4 .inner, .c5 .inner, .c6 .inner, .c7 .inner, .c8 .inner, .c9 .inner, .c10 .inner, .c11 .inner, .c12 .inner, .c13 .inner, .c14 .inner, .c15 .inner, .c16 .inner {
    animation-name: colorCycleInner;
}

/* Stagger the animation delays */

.c1 .outer,
.c1 .inner {
    animation-delay: 0s;
}

.c2 .outer,
.c2 .inner {
    animation-delay: calc(var(--t) * 15 / -16);
}

.c3 .outer,
.c3 .inner {
    animation-delay: calc(var(--t) * 14 / -16);
}

.c4 .outer,
.c4 .inner {
    animation-delay: calc(var(--t) * 13 / -16);
}

.c5 .outer,
.c5 .inner {
    animation-delay: calc(var(--t) * 12 / -16);
}

.c6 .outer,
.c6 .inner {
    animation-delay: calc(var(--t) * 11 / -16);
}

.c7 .outer,
.c7 .inner {
    animation-delay: calc(var(--t) * 10 / -16);
}

.c8 .outer,
.c8 .inner {
    animation-delay: calc(var(--t) * 9 / -16);
}

.c9 .outer,
.c9 .inner {
    animation-delay: calc(var(--t) * 8 / -16);
}

.c10 .outer,
.c10 .inner {
    animation-delay: calc(var(--t) * 7 / -16);
}

.c11 .outer,
.c11 .inner {
    animation-delay: calc(var(--t) * 6 / -16);
}

.c12 .outer,
.c12 .inner {
    animation-delay: calc(var(--t) * 5 / -16);
}

.c13 .outer,
.c13 .inner {
    animation-delay: calc(var(--t) * 4 / -16);
}

.c14 .outer,
.c14 .inner {
    animation-delay: calc(var(--t) * 3 / -16);
}

.c15 .outer,
.c15 .inner {
    animation-delay: calc(var(--t) * 2 / -16);
}

.c16 .outer,
.c16 .inner {
    animation-delay: calc(var(--t) * 1 / -16);
}
